---
title: "CoVPN Screening Registry Analysis"
output:
  word_document: default
  html_document:
    theme: yeti
    highlight: tango
    toc: no
    toc_float: no
  pdf_document: default
---

__Date generated:__ `r format(Sys.time(), '%B %d, %Y')` 

__By:__ Blythe Adamson, blythejane@gmail.com 

__Collaborators:__ James Kublin, Neil Abernethy, Abigail Orlando

<br>

```{r global_options, include=FALSE}

############ GLOBAL VARIABLES ############

knitr::opts_chunk$set(fig.width = 8,
                      fig.height = 5,
                      warning = FALSE,
                      message = FALSE,
                      echo = FALSE)

options(scipen=999)

options(ore.warn.order=FALSE)

# Weights for total cumulative exposure risk score 
beta_home <- .2
beta_work <- .3
beta_community <- .4
beta_transit <- .1

# Exposure odds ratios
or_risky_home <- 3.0
or_school_childcare <- 3.0
or_partner_job <- 1.5
or_job_risk_high <- 2.0
or_job_risk_low <- 0.5
or_wfh <- 0.01
or_work_unsafe_distance <- 2.0
or_work_unsafe_masks <- 2.0

# Clinical risk odds ratios
p_clinical_age50 <- 0.7 
or_age18 <- 0.1
or_age40 <- 0.4
or_age60 <- 1.1
or_age70 <- 2
or_age80 <- 3
or_race_black <- 5
or_hispanic <- 5
or_bmi_overweight <- 1.5
or_bmi_obese <- 3
or_comorbidity_n <- 1.3 #Source: Cover risk score
or_cancer <- 3 #source: cover risk score

```

```{r setup, include=FALSE}
library(ORE)
library(compareGroups)
library(knitr)
library(reticulate)
library(plyr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(kableExtra)
library(lubridate)
library(readr)
library(scales)
library(stringr)
library(survminer)
library(Hmisc)
```

# Background
The mission of the COVID-19 Prevention Network (CoVPN) is to conduct Phase 3 
efficacy trials for COVID-19 vaccines and monoclonal antibodies. The CoVPN 
is working to develop and conduct studies to ensure rapid and thorough evaluation 
of US government-sponsored COVID-19 vaccines for the prevention of COVID-19 
disease. The purpose of the CoVPN Screening Registry is to create a list of 
potential volunteers who want to take part in current or future COVID-19 
prevention clinical trials. You must be 18 years or older to participate. 
Participation involves completing a short online survey that includes some 
personal questions. Participation is voluntary.

A major and critical need for the field is the ability to provide some level of 
confidence in predicting individual risk for infection and disease based on a 
survey of demographic detail, e.g. CoVPN registry. If clinical trial sites can 
easily identify and enroll patients who are most likely to become an endpoint, 
the pre-specified count of endpoints needed for trial completion will be 
reached sooner and sufficient evidence will be available sooner for the FDA 
to evaluate vaccine efficacy. 

__Research Question:__ _What is the likelihood that an individual in the CoVPN volunteer screening registry will become infected with SARS-CoV-2 and develop symptomatic COVID disease in the next 3 months?_

<br>

# Methods

### Study population
The population of interest is people in the United States who have expressed willingness to participate in COVID-19 vaccine clinical trials and who completed an online Volunteer Screening Form and are included in the CoVPN Screening Registry. 

### Study design
This project aims to design an endpoint risk model to be applied to the CoVPN Screening Registry using an evidence synthesis of published studies and publicly available data sources. 

### Data provenance
The main data source is the CoVPN Vaccine Trial Screening Registry powered by Oracle APEX.
The online survey form with all questions is avaiable 
[here](https://coronaviruspreventionnetwork.org/clinical-study-volunteer/).


###### __Table 1.__ Key model inputs

Variables in exposure model | Odds Ratio (OR)| Reference
----------------------|------------|----------------
Risky household setting compared to average setting | `r or_risky_home` | Expert opinion 
Child in household returning to school or childcare in 2020 | `r or_school_childcare`| Expert opinion 
Other member of household has risky job compared to average job | `r or_partner_job`| Expert opinion 
Working in high risk job compared to average job risk | `r or_job_risk_high`| Expert opinion 
Working in lower risk job compared to average job risk | `r or_job_risk_low`| Expert opinion 
Working only from home | `r or_wfh`| Expert opinion 

Dimension in the exposure model | Weight (beta) | Reference
----------------------|------------|----------------
Home | `r beta_home` | Expert opinion
Work | `r beta_work`| Expert opinion
Community | `r beta_community`| Expert opinion
Transit | `r beta_transit`| Expert opinion


Variables in clinical model | Odds Ratio (OR)| Reference
----------------------|------------|----------------
Age 18-<40 | `r or_age18` | Davies et al
Age 40-<50 | `r or_age40` | Davies et al
Age 50-<60 | 1.0 (Reference) | Davies et al
Age 60-<70 | `r or_age60` | Davies et al
Age 70-<80 | `r or_age70` | Davies et al
Age 40-<50 | `r or_age80` | Davies et al
Black race | `or_race_black`  | Expert opinion
Hispanic or LatinX | `r or_hispanic`| Expert opinion
BMI overweight | `r or_bmi_overweight`| Expert opinion
BMI obese | `r or_bmi_obese` | Expert opinion
No. of comorbidities | `r or_comorbidity_n`  Cover risk score
History of recent cancer treatment | `r or_cancer` | Cover risk score

<small>*Reference groups: non-black race is the reference group for race and non-Hispanic, non-LatinX is the reference group for Hispanic or LatinX, normal or underweight BMI is the reference group for BMI categories. Abbreviations: BMI, body mass index.</small>

The assumed baseline probability of showing symptoms for an infected person age 50-59 was `r p_clinical_age50`, for someone with normal weight who is non-black race, non-Hispanic, has no comorbidities, and no history of cancer. 


```{r gather data}
response_raw <- ore.pull(SURVEY_RESPONSES_PIVOT_MV)

question <- ore.pull(QUESTION_VALUES)

names(response_raw) <- tolower(names(response_raw))

names(question) <- tolower(names(question))
```


```{r functions}

ids_variable_names <- c('md_ethnicity_ids', 'occ_jobs_ids', 'ws_work_transportation_ids',
          'ls_dwellings_ids', 'ls_cohab_jobs_ids', 'css_current_symptoms_ids',
          'css_pre_existing_cond_ids')

MakeDummyNames <- function(v, prefix = '') {
  s <- sort(unique(v))
  d <- outer(v, s, function(v, s) 1L * (v == s))
  colnames(d) <- paste0(prefix, s)
  d
}

MakeDummyVariables <- function(df, cols) {
  
  for (col in cols) {
    lst <- strsplit(as.character(df[[col]]), split = "\\:")
    k <- lengths(lst)
    FlatColumn <- unlist(lst, use.names = FALSE)
    df2 <- data.frame(survey_response_id = rep.int(df$survey_response_id, k),
                      value = FlatColumn)
    # bind the dummies to the original dataframe
    binded <- cbind(df2, MakeDummyNames(df2$value, prefix = paste(col, "_", sep="")))
    temp <- binded[-2] %>%
      group_by(survey_response_id) %>%
      summarise_each(funs(sum))
    merged <- left_join(df, temp, by = c("survey_response_id" = "survey_response_id"))
    index_new_col <- (ncol(df) + 1):ncol(merged)
    merged[, index_new_col][is.na(merged[, index_new_col])] <- 0
    df <- merged
  }
  
  return(df)
}

CreateBaselineTable <- function(baseline_df, 
                                variable){
  
  COLUMNS <- c(variable)
  
  baseline_df <- as.data.frame(baseline_df)
  
  #create formula for comparison groups
  FORMULA <- as.formula(paste(COLUMNS, 
                               paste(LOOKUP.T, collapse = " + "),
                               sep = " ~ "))
  
  # Loop through all variables to give them a label to improve formatting in the table
  for (i in 1:length(NAMES)) {
    label(baseline_df[, LOOKUP.T[i]]) <- NAMES[i]
  }
  
  baseline <- compareGroups(FORMULA, 
                            data = baseline_df,
                            max.xlev = 12,
                            max.ylev = 12,
                            #Change method for the continuous variables to output median (IQR)
                            #method = 2
                            )
  
  if(n_distinct(baseline_df[[variable]]) >= 2) {
    table1 <- createTable(baseline,
                          show.p.overall = TRUE,
                          show.all = TRUE,
                          digits = 1)
  } else{
    table1 <- createTable(baseline,
                          show.p.overall = FALSE,
                          show.all = FALSE,
                          digits = 1)
  }
    
  return(table1)
  
}

```



```{r clean and derive features}

responses_clean <- MakeDummyVariables(response_raw, ids_variable_names)

############ DERIVED FEATURES  ############

# DERIVED FEATURE: susceptible
check_if_susceptible <- function(x, y){
   is_not_pos <- ifelse((x=='Positive') | (y=='Positive'), 0, 1)
   return(ifelse(is.na(is_not_pos), 1, is_not_pos))
}
responses_clean$susceptible <- mapply(check_if_susceptible, responses_clean$crd_rna_test_result, responses_clean$crd_anti_test_result)

# DERIVED FEATURE: freq_work
responses_clean$freq_work <- as.numeric(mapvalues(responses_clean$ws_wkpl_freq_id, 
                                      from=c(181,201,202,221),
                                      to=c(0, 1, 3, 5)))
responses_clean$freq_work[is.na(responses_clean$freq_work)] <- 0

# DERIVED FEATURE: any_work
responses_clean$any_work <- sapply(responses_clean$occ_working_id, function(x) ifelse (x == 127, 1, 0))
responses_clean$any_work[is.na(responses_clean$any_work)] <- 0

# DERIVED FEATURE: freq_work_increase
responses_clean$freq_work_increase <- as.numeric(mapvalues(responses_clean$ws_wkpl_freq_change_est_id, 
                                               from=c(241,242,243,261,262,263,264),
                                               to=c(1,3,4,5,0,0,0)))
responses_clean$freq_work_increase[is.na(responses_clean$freq_work_increase)] <- 0

# DERIVED FEATURE: job_risk_high
# 178:childcare, 161:socialservices, 139:dental, 164:factory, 163:food
# 137:healthworker, 140:personal, 162:protective, 46:transit, 621:tourism
responses_clean$job_risk_high <- sapply(responses_clean$occ_jobs_ids, function(x) ifelse (any(
   x==c(178,161,139,164,163,137,140,162,46,621)), 1, 0)) 
responses_clean$job_risk_high[is.na(responses_clean$job_risk_high)] <- 0

# DERIVED FEATURE: job_low_risk
# 174:architect, 176:art, 131:business, 179:laborer, 165:farmer, 168:grounds
# 132:IT, 134:legal, 136:research, 130:management, 133:office, 171:warehouse
responses_clean$job_risk_low <- sapply(responses_clean$occ_jobs_ids, function(x) ifelse (any(
   x==c(174,176,131,179,165,168,132,134,136,130,133,171)), 1, 0)) 
responses_clean$job_risk_low[is.na(responses_clean$job_risk_low)] <- 0

# DERIVED FEATURE: n_work_interactions
responses_clean$n_work_interactions <- as.numeric(mapvalues(responses_clean$ws_work_interactions_dy_id, 
                                                from=c(583,584,585,586,587),
                                                to=c(0,1,2,3,4)))
responses_clean$n_work_interactions[is.na(responses_clean$n_work_interactions)] <- 0

# DERIVED FEATURE: n_transit_methods
gen_n_transit_methods <- function(df){
   n_transit_methods <- sum(as.numeric(df["ws_work_transportation_ids_285"]),
                            as.numeric(df["ws_work_transportation_ids_285"]),
                            as.numeric(df["ws_work_transportation_ids_286"]),
                            as.numeric(df["ws_work_transportation_ids_287"]),
                            as.numeric(df["ws_work_transportation_ids_288"]),
                            as.numeric(df["ws_work_transportation_ids_289"]),
                            as.numeric(df["ws_work_transportation_ids_290"]))
   return(n_transit_methods)
}
responses_clean$n_transit_methods <- apply(responses_clean, 1, gen_n_transit_methods)

# DERIVED FEATURE: wfh_only
gen_wfh_only <- function(df){
   wfh_only <- ifelse ((df['n_transit_methods']=0 & (as.numeric(df["ws_work_transportation_ids_53"]) == 1)), 1, 0)
   return(wfh_only)
}
responses_clean$wfh_only <- apply(responses_clean, 1, gen_wfh_only)

# DERIVED FEATURE: work_unsafe_distance
responses_clean$work_unsafe_distance <- sapply(responses_clean$ws_wkpl_scl_dis_meas_id, function(x) ifelse (x == 266, 1, 0))
responses_clean$work_unsafe_distance[is.na(responses_clean$work_unsafe_distance)] <- 0

# DERIVED FEATURE: work_unsafe_masks
responses_clean$work_unsafe_masks <- sapply(responses_clean$ws_wkpl_ppe_usage_id, function(x) ifelse (x == 282, 1, 0))
responses_clean$work_unsafe_masks[is.na(responses_clean$work_unsafe_masks)] <- 0

# DERIVED FEATURE: risky_home_setting
responses_clean$risky_home_setting <- apply(responses_clean[c('ls_dwellings_ids_143', 'ls_dwellings_ids_144', 'ls_dwellings_ids_145',
                                                            'ls_dwellings_ids_146', 'ls_dwellings_ids_148', 'ls_dwellings_ids_149',
                                                            'ls_dwellings_ids_150', 'ls_dwellings_ids_153')], 1, max)
responses_clean$risky_home_setting[is.na(responses_clean$risky_home_setting)] <- 0


# DERIVED FEATURE: n_home_young
responses_clean$n_home_young = sapply(responses_clean$ls_cohab_under_18, function(x) ifelse(x>8, 8, x))
responses_clean$n_home_young[is.na(responses_clean$n_home_young)] <- 0

# DERIVED FEATURE: n_home_middle
responses_clean$n_home_middle = sapply(responses_clean$ls_cohab_btw_18_64, function(x) ifelse(x>8, 8, x))
responses_clean$n_home_middle[is.na(responses_clean$n_home_middle)] <- 0

# DERIVED FEATURE: n_home_older
responses_clean$n_home_older = sapply(responses_clean$ls_cohab_over_64, function(x) ifelse(x>8, 8, x))
responses_clean$n_home_older[is.na(responses_clean$n_home_older)] <- 0

# DERIVED FEATURE: home_schoolreturn
responses_clean$home_schoolreturn = sapply(responses_clean$ls_cohab_exp_rtn_sch_id, function(x) if_else(x == 381, 1, 0))
responses_clean$home_schoolreturn[is.na(responses_clean$home_schoolreturn)] <- 0

# DERIVED FEATURE: outside_childcare
responses_clean$outside_childcare = sapply(responses_clean$ls_cohab_in_sch_or_cc, function(x) ifelse(x>8, 8, x))
responses_clean$outside_childcare[is.na(responses_clean$outside_childcare)] <- 0

# DERIVED FEATURE: high_partner_risk
responses_clean$high_partner_risk <- apply(responses_clean[c('ls_cohab_jobs_ids_317', 'ls_cohab_jobs_ids_160', 'ls_cohab_jobs_ids_158',
                                                              'ls_cohab_jobs_ids_303', 'ls_cohab_jobs_ids_302', 'ls_cohab_jobs_ids_326',
                                                              'ls_cohab_jobs_ids_159', 'ls_cohab_jobs_ids_301', 'ls_cohab_jobs_ids_47',
                                                              'ls_cohab_jobs_ids_623')], 1, max)
responses_clean$high_partner_risk[is.na(responses_clean$high_partner_risk)] <- 0

# DERIVED FEATURE: freq_visitors
responses_clean$freq_visitors = as.numeric(mapvalues(responses_clean$ci_home_visitor_freq_id, 
                                          from=c(48,49,361,362,363,364),
                                          to=c(0,0,2,1,0,0)))
responses_clean$freq_visitors[is.na(responses_clean$freq_visitors)] <- 0

# DERIVED FEATURE: social_gathering
responses_clean$social_gathering = sapply(responses_clean$ci_gatherings_last_2w_id, function(x) if_else(x == 341, 1, 0))
responses_clean$social_gathering[is.na(responses_clean$social_gathering)] <- 0

# DERIVED FEATURE: n_social_intxn
responses_clean$n_social_intxn <- as.numeric(mapvalues(responses_clean$ci_interactions_dy_id, 
                                            from=c(588,589,590,591,592),
                                            to=c(0,1,2,3,4))) - 1
responses_clean$n_social_intxn[is.na(responses_clean$n_social_intxn)] <- 0

# DERIVED FEATURE: n_gathering
responses_clean$n_gathering <- as.numeric(mapvalues(responses_clean$ci_gatherings_people_id, 
                                                           from=c(343,344,345,346),
                                                           to=c(0,1,2,3)))
responses_clean$n_gathering[is.na(responses_clean$n_gathering)] <- 0

# DERIVED FEATURE: indoor_gathering
responses_clean$indoor_gathering <- sapply(responses_clean$ci_gatherings_location_id, function(x) ifelse (any(x==c('347', '601')), 1, 0))
responses_clean$indoor_gathering[is.na(responses_clean$indoor_gathering)] <- 0

# DERIVED FEATURE: travel_plane
responses_clean$travel_plane <- responses_clean$ws_work_transportation_ids_290
responses_clean$travel_plane[is.na(responses_clean$travel_plane)] <- 0
   
# DERIVED FEATURE: travel_bus
responses_clean$travel_bus <- responses_clean$ws_work_transportation_ids_287
responses_clean$travel_bus[is.na(responses_clean$travel_bus)] <- 0

# DERIVED FEATURE: travel_train
responses_clean$travel_train <- responses_clean$ws_work_transportation_ids_288
responses_clean$travel_train[is.na(responses_clean$travel_train)] <- 0

# DERIVED FEATURE: age_18
responses_clean$age_18 <- sapply(responses_clean$md_age, function(x) ifelse (x<40, 1, 0))
responses_clean$age_18[is.na(responses_clean$age_18)] <- 0

# DERIVED FEATURE: age_40
responses_clean$age_40 <- sapply(responses_clean$md_age, function(x) ifelse ((x<50 & x>= 40), 1, 0))
responses_clean$age_40[is.na(responses_clean$age_40)] <- 0

# DERIVED FEATURE: age_50
responses_clean$age_50 <- sapply(responses_clean$md_age, function(x) ifelse ((x<60 & x>= 50), 1, 0))
responses_clean$age_50[is.na(responses_clean$age_50)] <- 0

# DERIVED FEATURE: age_60
responses_clean$age_60 <- sapply(responses_clean$md_age, function(x) ifelse ((x<70 & x>= 60), 1, 0))
responses_clean$age_60[is.na(responses_clean$age_60)] <- 0

# DERIVED FEATURE: age_70
responses_clean$age_70 <- sapply(responses_clean$md_age, function(x) ifelse ((x<80 & x>= 70), 1, 0))
responses_clean$age_70[is.na(responses_clean$age_70)] <- 0

# DERIVED FEATURE: age_80
responses_clean$age_80 <- sapply(responses_clean$md_age, function(x) ifelse (x>=80, 1, 0))
responses_clean$age_80[is.na(responses_clean$age_80)] <- 0

# DERIVED FEATURE: race_black
responses_clean$race_black <- responses_clean$md_ethnicity_ids_40
responses_clean$race_black[is.na(responses_clean$race_black)] <- 0

# DERIVED FEATURE: hispanic
responses_clean$hispanic <- responses_clean$md_ethnicity_ids_43
responses_clean$hispanic[is.na(responses_clean$race_black)] <- 0

# DERIVED FEATURE: kg
responses_clean$kg <- sapply(responses_clean$md_weight, function(x) x*0.453592)
responses_clean$kg[is.na(responses_clean$kg)] <- 0

# DERIVED FEATURE: meters
gen_meters <- function(x, y){
   return((as.numeric(x)*12 + as.numeric(y))*0.0254)
}
responses_clean$meters <- mapply(gen_meters, responses_clean$md_height_ft, responses_clean$md_height_in)
responses_clean$meters[is.na(responses_clean$meters)] <- 0

# DERIVED FEATURE: bmi
gen_bmi <- function(x, y){
   return(x/(y^2))
}
responses_clean$bmi <- mapply(gen_bmi, responses_clean$kg, responses_clean$meters)
responses_clean$bmi[is.na(responses_clean$bmi)] <- 0

# DERIVED FEATURE: bmi_overweight
responses_clean$bmi_overweight <- sapply(responses_clean$bmi, function(x) ifelse(x>=25 & x<30, 1, 0))
responses_clean$bmi_overweight[is.na(responses_clean$bmi_overweight)] <- 0

# DERIVED FEATURE: bmi_obese
responses_clean$bmi_obese <- sapply(responses_clean$bmi, function(x) ifelse(x>=30, 1, 0))
responses_clean$bmi_obese[is.na(responses_clean$bmi_obese)] <- 0

# DERIVED FEATURE: co_asthma
responses_clean$co_asthma <- responses_clean$css_pre_existing_cond_ids_549
responses_clean$co_asthma[is.na(responses_clean$co_asthma)] <- 0

# DERIVED FEATURE: co_cancer_hx
responses_clean$co_cancer_hx <- responses_clean$css_pre_existing_cond_ids_560
responses_clean$co_cancer_hx[is.na(responses_clean$co_cancer_hx)] <- 0

# DERIVED FEATURE: cancer
responses_clean$cancer <- responses_clean$css_pre_existing_cond_ids_561
responses_clean$cancer[is.na(responses_clean$cancer)] <- 0

# DERIVED FEATURE: comorbidity_n
responses_clean$comorbidity_n <- apply(responses_clean[c("css_pre_existing_cond_ids_1","css_pre_existing_cond_ids_2",
                                                         "css_pre_existing_cond_ids_3","css_pre_existing_cond_ids_4",
                                                         "css_pre_existing_cond_ids_547",
                                                         "css_pre_existing_cond_ids_548","css_pre_existing_cond_ids_549",
                                                         "css_pre_existing_cond_ids_550","css_pre_existing_cond_ids_551",
                                                         "css_pre_existing_cond_ids_552","css_pre_existing_cond_ids_554",
                                                         "css_pre_existing_cond_ids_555","css_pre_existing_cond_ids_556",
                                                         "css_pre_existing_cond_ids_557","css_pre_existing_cond_ids_558",
                                                         "css_pre_existing_cond_ids_559","css_pre_existing_cond_ids_560",
                                                         "css_pre_existing_cond_ids_561","css_pre_existing_cond_ids_562",
                                                         "css_pre_existing_cond_ids_563","css_pre_existing_cond_ids_564",
                                                         "css_pre_existing_cond_ids_565","css_pre_existing_cond_ids_566",
                                                         "css_pre_existing_cond_ids_567","css_pre_existing_cond_ids_568",
                                                         "css_pre_existing_cond_ids_569","css_pre_existing_cond_ids_570",
                                                         "css_pre_existing_cond_ids_81","css_pre_existing_cond_ids_82",
                                                         "css_pre_existing_cond_ids_83")], 1, sum)
responses_clean$comorbidity_n[is.na(responses_clean$comorbidity_n)] <- 0

responses_clean <- responses_clean %>% 
  mutate(comorbidity_n = if_else(comorbidity_n >=5, 5, comorbidity_n))
```



```{r generate exposure scores}

# Define exposure score

exposures <- responses_clean %>% 
  select(sr_guid, susceptible,
         any_work, freq_work, freq_work_increase, 
         job_risk_high, job_risk_low,
         wfh_only, n_work_interactions,
         risky_home_setting, high_partner_risk, 
         n_home_young, n_home_middle, n_home_older,
         home_schoolreturn, outside_childcare, 
         freq_visitors,
         social_gathering, n_social_intxn, n_gathering, indoor_gathering,
         travel_bus, travel_train, travel_plane,
         race_black, hispanic,
         risk_score_cover_h) %>% 
  mutate(full_home_score  = (or_risky_home^risky_home_setting) *
           (n_home_young*(or_school_childcare^home_schoolreturn) +
           (n_home_middle + n_home_older)*(or_partner_job^high_partner_risk) +
           freq_visitors),
         score_home = if_else(full_home_score >= 15, 15, full_home_score)/15,
         
         full_score_community = ((social_gathering*n_gathering*indoor_gathering)^2 + n_social_intxn^2)*
           (or_race_black^race_black)*(or_hispanic^hispanic), 
         score_community = if_else(full_score_community >= 10, 10, full_score_community)/10,
         
         full_work_score = (freq_work + freq_work_increase)*
           (or_job_risk_high^job_risk_high)*
           (or_job_risk_low^job_risk_low), 
         score_work = if_else(full_work_score >= 10, 10, full_work_score, missing = 0)/10,
         
         score_transit = ifelse(travel_bus + travel_plane + travel_train > 0, 1, 0),
         
         score_cumulative_exposure = round((
           beta_home*score_home + 
           beta_work*score_work +
           beta_community*score_community +
           beta_transit*score_transit)*100, digits = 0))
  
score_summary_part1 <- exposures %>% 
  select(sr_guid, susceptible,
         score_home,
         score_community,
         score_work,
         score_transit,
         score_cumulative_exposure, 
         risk_score_cover_h)
```

```{r generate clinical risk}

# Define clinical symptomatic risk score

alpha_clinical <- log(p_clinical_age50/(1- p_clinical_age50))
beta_age18 <- log(or_age18)
beta_age40 <- log(or_age40)
beta_age60 <- log(or_age60)
beta_age70 <- log(or_age70)
beta_age80 <- log(or_age80)
beta_race_black <- log(or_race_black)
beta_hispanic <- log(or_hispanic)
beta_bmi_overweight <- log(or_bmi_overweight)
beta_bmi_obese <- log(or_bmi_obese)
beta_comorbidity_n <- log(or_comorbidity_n)
beta_cancer <- log(or_cancer)

clinical <- responses_clean %>% 
  select(sr_guid,
         md_gender, md_age,
         age_18, age_40, age_50, age_60, age_70, age_80, 
         bmi_overweight, bmi_obese,
         race_black, hispanic,
         comorbidity_n, cancer,
         risk_score_cover_h) %>% 
  mutate(logistic = alpha_clinical + 
                             beta_age18*age_18 + 
                             beta_age40*age_40 +
                             beta_age60*age_60 +
                             beta_age70*age_70 +
                             beta_age80*age_80 +
                             beta_race_black*race_black +
                             beta_hispanic*hispanic +
                             beta_bmi_overweight*bmi_overweight +
                             beta_bmi_obese*bmi_obese + 
                             beta_comorbidity_n*comorbidity_n + 
                             beta_cancer*cancer,
         p_clinical = exp(logistic) /
           (1 + exp(logistic))) %>% 
  # create control score for comparison using only age
  mutate(score_control = 100 - md_age)

score_summary_part2 <- score_summary_part1 %>% 
  dplyr::left_join(clinical %>% 
              select(sr_guid, p_clinical, score_control), by = "sr_guid") 

```

```{r generate endpoint score}

score_summary <- score_summary_part2 %>% 
  mutate(score_endpoint = score_cumulative_exposure * p_clinical * susceptible,
         endpoint_score_level = factor(if_else(score_endpoint >=40, "High", 
                                        if_else(score_endpoint >=25 & score_endpoint <40, "Moderate",
                                                "Low"), missing = "Low"), 
                                       ordered = TRUE, 
                                       levels = c("Low", "Moderate", "High")))

# final analysis data frame with all cleaned responses and model predictions
response_predictions <- responses_clean %>% 
  left_join(score_summary %>% 
              select(-susceptible, -risk_score_cover_h), 
            by = "sr_guid")
```

<br>

# Results

We developed a individual person-level cumulative endpoint risk score with four dimensions 
(home, community, work, transit), a relative risk of showing symptoms if infected, 
and a magic vaccine trial endpoint risk score that combines susceptibility, 
cumulative exposure, and risk of symptoms. 

### Population Characteristics

```{r}
LOOKUP.T <- c('any_work',
              'freq_work',
              'freq_work_increase',
              'job_risk_high',
              'job_risk_low',
              'n_home_young',
              'n_home_middle',
              'n_home_older',
              'home_schoolreturn',
              'freq_visitors',
              'n_social_intxn',
              'social_gathering',
              'n_gathering',
              'indoor_gathering',
              'travel_bus',
              'travel_train',
              'travel_plane',
              'md_age',
              'race_black',
              'hispanic',
              'bmi_overweight',
              'bmi_obese',
              'comorbidity_n',
              'cancer')

NAMES <- c('Working currently',
           'Frequency of work, average days per week',
           'Increasing frequency of work in next 3 months, additional days per week',
           'High risk job function',
           'Low risk job function', 
           'Number of young people in household',
           'Number of middle-aged people in househouse',
           'Number of older people in household',
           'Children returning to school in 2020',
           'Frequency of visitors to household',
           'Number of social interactions, average contacts per day',
           'Attending a social gathering in past 2 weeks',
           'Attended indoor social gathering in past 2 weeks',
           'Size of recent social gathering',
           'Travel to work by bus',
           'Travel to work by train',
           'Travel for work frequently on airplane',
           'Age, years',
           'Black or African American Race',
           'Hispanic or LatinX',
           'Overweight, body mass index 25-<30',
           'Obese, body mass index >30',
           'Number of comorbidities',
           'Cancer, undergoing current treatment')

table1 <- CreateBaselineTable(baseline_df = response_predictions, variable = 'endpoint_score_level')

export2md(table1,
          caption = "Table 1. Baseline characteristics of people in the CoVPN Screening Registry, stratified by level of Endpoint Risk Score")

```


<br>

## New Vaccine Trial Enpoint Risk Score

The new proposed vaccine trial endpoint risk score is calculated as:

__score_endpoint = susceptible * score_cumulative_exposure * p_clinical__

where susceptible is defined as having no prior 
RNA or antibody test with a "Positive" result; 
cumulative exposure includes the additive probabilities of being exposed at 
home, community, work, and transit; and p_clinical is the expected probability 
the invidiual would experience clinical symptoms of COVID disease
if infected, depending on age, race, ethnicity, BMI, and comorbidities. 


```{r}
ggplot(score_summary, aes(score_endpoint, risk_score_cover_h)) +
  geom_jitter(alpha = .3, aes(color = score_community)) +
  xlim(0,100) +
  ylim(0,100) +
  xlab("New proposed endpoint risk score") +
  ylab("Cover Score for Hospitalization") + 
  geom_vline(xintercept = 50) + geom_hline(yintercept = 50) +
  theme_bw() +
  scale_color_gradient(name = "Community exposure", 
                       low = "yellow", high = "red", na.value = NA)
  
```

##### __Figure.__ New endpoint risk score vs Cover score for hospitalizations

<br>

The distribution of magic endpoint risk scores can be described using percentiles. 
These percentiles may be considered in the future as thresholds to define levels
of exposure risk. 

```{r}
quantile(score_summary$score_endpoint, c(.025, .25, .33, .5, .67, .75, .985))
```

Based on these findings, we defined a threshold for high risk of being an endpoint if an individual 
has a magic Endpoint Risk Score >=45. Given the population mix in the first 350,000 responses, this 
threshold classifies the top quarter of individuals as high risk. 

```{r, include = FALSE}
response_predictions %>% 
  dplyr::group_by(sr_status) %>% 
  dplyr::summarise(mean_endpoint_score = mean(score_endpoint)) 

response_predictions %>% 
  dplyr::group_by(sr_status) %>% 
  dplyr::summarise(n = n())
```

```{r}
ggplot(response_predictions, aes(md_age, score_endpoint)) +
  geom_jitter(alpha = .3, aes(color = freq_work)) +
  xlab("Age") +
  xlim(15, 85)+
  ylab("Endpoint Risk Score") +
  theme_bw() +
  scale_color_gradient(name = "Work days/wk", 
                       low = "blue", high = "yellow", na.value = NA)
```
*The color scale for work represents the average number of days per week that the invidivual is working in person at the time of responding to the survey

<br>

### Cumulative Exposure

The cumulative exposure score measures the expected quantity of potentially infectious 
exposures in the next three months using the dimensions of home, community, work, and transit. 
The probability of having a meaningful exposure in each dimension is dependent on 
the number of unique contacts, intensity of contact (i.e., proximity and duration), and 
frequency of contacting. 

```{r}
score_summary_long <- gather(data = score_summary, key = score, value = value, 
       score_home:risk_score_cover_h) 

ggplot(score_summary_long %>% 
         filter(score == "score_home" | score == "score_community" |
                  score == "score_work" | score == "score_transit"), aes(value, fill = score)) +
  geom_histogram(alpha = .7, binwidth = .1) +
  facet_wrap(~score) +
  xlab('Score') +
  ylab('Number of people in registry') +
  theme_bw()
```

##### __Figure.__ Histograms of community, home, work, and transit score that contribute to the cumulative exposure score

<br>

The probability of a meaningful infectious exposure at home, community, work, and transit in
the following three months is combined in the following way: 

_cumulative_exposure = beta_home*score_home + beta_work*score_work + beta_community*score_community + beta_transit*score_transit_

where the relative weights of each exposure setting (beta coefficients) are defined in Table 1 and the scores for each setting are defined as [WORK IN PROGRESS]:

_score_home = _

_score_community = _

_score_work = _

_score_transit = _

<br>

```{r}
ggplot(score_summary, aes(score_cumulative_exposure)) +
  geom_histogram(fill = "black", alpha = .6, binwidth = 5) +
  xlab('Cumulative exposure score') +
  ylab('Number of people in registry') +
  theme_bw()
```

##### __Figure.__ Distribution of cumulative exposure score


<br>

```{r}
ggplot(score_summary, aes(score_cumulative_exposure, risk_score_cover_h)) +
  geom_jitter(alpha = .3, aes(color = score_community), size = 1.5) +
  xlim(0,100) +
  ylim(0,100) +
  xlab("Cumulative Exposure Score") +
  ylab("Cover Score for Hospitalization") + 
  geom_vline(xintercept = 50) + geom_hline(yintercept = 50) +
  theme_bw() +
  scale_color_gradient(name = "Community exposure probability", 
                       low = "yellow", high = "red", na.value = NA)
  
```

##### __Figure.__ New cumulative exposure score vs Cover score H

<br>

### Clinical risk of COVID symptoms

The clinical risk score reflects the probability of showing relative risk of showing mild-moderate COVID symptoms if 
infected in the next 3 months compared to an average person who is age 50-59 years, 
non-hispanic, not Black, normal weight, with no comorbidities and no history of cancer. 
This relative risk, or clinical risk score, is calculated as:

`p_clinical = logit(symptoms|infected) = exp(alpha_clinical + beta_age18 * age18 +`
`beta_age40 * age_40 + beta_age60 * age60 + beta_age70 * age_70 + beta_age80 * age80 +`
`beta_race_black * race_black + beta_hispanic * hispanic +`
`beta_bmi_overweight * bmi_overweight + beta_bmi_obese * bmi_obese +`
`beta_comorbidities_n * comorbidities_n + beta_cancer * cancer)`

where each beta coefficient is the natural log of the corresponding odds ratios 
for each variable provided in Table 1. 

The clinical risk score reflects the relative likelihood of showing least mild 
symptoms if infected (clinical risk score = p_clinical * 100). 

<br>

```{r}
ggplot(score_summary, aes(p_clinical)) +
  geom_histogram(fill = "black", alpha = .6, binwidth = .05) +
  xlab('Probability of clinical symptoms if infected') +
  ylab('Number of people in registry') +
  xlim(0,1) +
  theme_bw()
```

##### __Figure.__ Distribution of probability of showing clinical symptoms if infected

Below the new cliniccal risk 
score is compared to
the Cover score H representing risk of hospitalization if infected. 

```{r}
ggplot(clinical, aes(risk_score_cover_h, p_clinical)) +
  geom_jitter(alpha = .3, aes(color = comorbidity_n)) +
  xlim(0,100) +
  ylim(0,1) +
  xlab("Cover Score for Hospitalization if Infected") +
  ylab("*NEW* Probability of Clinical Symptoms if Infected") + 
  geom_vline(xintercept = 50) + geom_hline(yintercept = 0.5) +
  theme_bw() +
  scale_color_gradient(name = "Comorbidities", 
                       low = "yellow", high = "red", na.value = NA)
  
```

##### __Figure.__ New score for risk of showing mild-moderate symptoms if infected ("clinical risk score") vs Cover score H

<br>

### Sensitivity Analysis 

_What are the main volunteer characteristics that are driving the Endpoint Risk Score?_ 

The linear regression below evaluates the relationship between the 
dimensions of the exposure score and the probability of experiencing
clinical symptoms with the estimated Endpoint Risk Score. 

```{r}
fit <- glm(score_endpoint ~ score_home + score_community + 
             score_work + score_transit + p_clinical, 
           data = response_predictions)

summary(fit)
```

The linear regression results below show the relationship between a one unit
change in each model feature with the assocaited increase or decrease
change in the Endpoint Risk Score outcome (max 100 points possible), 
while holding all other model features constant. 
As expected based on the odds ratio inputs used, this sensitivity anlaysis 
shows that Black race and Hispanic ethnicity have a meaningfully large contribution. 
Other key drivers of the Endpoint Risk Score outcome are the number of social interactions,
attendance at indoor gatherings, riskiness of job, and obesity are main drivers. 

```{r}

fit <- glm(score_endpoint ~ md_age + comorbidity_n + cancer +
             bmi_overweight + bmi_obese +
             race_black + hispanic +
             freq_work + freq_work_increase +
             job_risk_high + job_risk_low +
             n_home_young + n_home_middle + n_home_older +
             home_schoolreturn + freq_visitors +
             n_social_intxn + n_gathering + indoor_gathering +
             travel_bus + travel_train + travel_plane, 
           data = response_predictions)

summary(fit)
```


We are particularly interested in the emphasis on the older age group 
e.g. > 65 who are being targeted.

```{r}
ggplot(response_predictions, aes(md_age, score_endpoint)) + 
  geom_smooth(method = "lm", size = 2) +
  xlab("Age") +
  ylab("Endpoint Risk Score") +
  xlim(20, 85) +
  ylim(0, 100) +
  theme_bw()
```



# Discussion

The vaccine endpoint risk score developed here may be a useful tool to enrich the 
population assessed for enrollment.

<br>

## APPENDIX

<br>


```{r}
ggplot(score_summary, aes(score_cumulative_exposure, p_clinical)) +
  geom_jitter(alpha = .3, aes(color = score_community)) +
  xlim(0,100) +
  ylim(0,1) +
  xlab("Cumulative exposure score") +
  ylab("Probability of symptoms if infected") + 
  geom_vline(xintercept = 50) + geom_hline(yintercept = .5) +
  theme_bw() +
  scale_color_gradient(name = "Community exposure", 
                       low = "grey", high = "blue", na.value = NA)
```

##### __Figure.__ Exploratory evaluation of exposure vs clinical scores

<br>

```{r}
ggplot(score_summary, aes(score_home, score_work)) +
  geom_jitter(alpha = .3, aes(color = score_community)) +
  xlim(0,1) +
  ylim(0,1) +
  xlab("Home exposure probability") +
  ylab("Work exposure probability") + 
  geom_vline(xintercept = .5) + geom_hline(yintercept = .5) +
  theme_bw() +
  scale_color_gradient(name = "Community exposure", 
                       low = "grey", high = "blue", na.value = NA)
```

##### __Figure.__ Distribution of home exposure and work exposure dimentions of the cumulative exposure score

<br>

```{r}
ggplot(score_summary, aes(score_home, score_work)) +
  geom_jitter(alpha = .3, aes(color = score_community)) +
  xlim(0,1) +
  ylim(0,1) +
  xlab("Home exposure probability") +
  ylab("Work exposure probability") + 
  geom_vline(xintercept = .5) + geom_hline(yintercept = .5) +
  theme_bw() +
  scale_color_gradient(name = "Transit exposure", 
                       low = "grey", high = "green", na.value = NA)
```

##### __Figure.__ Correlation between home and work exposure


```{sql connection=, eval = FALSE}

/* Neil's interim risk of infection score */
select 
  /* Sum the scores here for a total */
 (
   hh_score
   + work_score
   + social_score
   + transit_score
 ) * power (comorbid_score, 1.3) total_score,
  srp.*
from (
  /* Do individual scoring here, such as cancer */
  select
    (nvl(LS_COHAB_BTW_18_64, 0) + nvl(LS_COHAB_OVER_64, 0) + nvl(LS_COHAB_UNDER_18, 0)
      * power(school_exposure, 1.5) - 1)
      * ((work_days) * (24-8-1-8) + (7-work_days) * (24-8))
      * power(caregiver, 1.2) + (hh_other_adult)*(7*8) 
      hh_score,
    work_days * 8 * power(high_risk_prof, 5)
      * power(work_cleaning, 0.8)
      * 3 -- workfactor of 3 as a placeholder
      work_score,
    event_location_score
      * greatest(
          1, 
          interactions - (nvl(LS_COHAB_BTW_18_64, 0) + nvl(LS_COHAB_OVER_64, 0) + nvl(LS_COHAB_UNDER_18, 0))
        ) 
      * 3 -- socialfactor of 3 as a placeholder
      social_score,
    (work_days * 1) * uses_transit * 5 -- traveltime = 1 as a placeholder; transitfactor of 5 as a placeholder
      transit_score,
    srp.*
  from (
    select srp.*,
      /* Do pre calculations here, such as age grouping */
       case
         when LS_COHAB_BTW_18_64 + LS_COHAB_OVER_64 - 1 > 0
         then 1
         else 0
       end hh_other_adult,
       case
         when OCC_STUDENT_ID = 121 -- Yes
           and OCC_RETURN_TO_SCHOOL_ID = 123 -- Yes
         then 1
         else 0
       end school_exposure,
       case 
         when WS_WKPL_FREQ_ID = 201 -- 1 day/wk
         then 1
         when WS_WKPL_FREQ_ID = 202 -- 2-4 days/wk
         then 3
         when WS_WKPL_FREQ_ID = 221 -- 5+ days/wk
         then 5
         else 0
       end work_days,
       case 
         when LS_COHAB_OVER_64 + LS_COHAB_UNDER_18 > 1 
           and (instr(':' || OCC_JOBS_IDS || ':', ':180:') > 0  -- Home Based Business or Stay-at-Home Caregiver
             or instr(':' || WS_WORK_TRANSPORTATION_IDS  || ':', ':53:') > 0 -- Work from home
             or WS_WKPL_FREQ_ID = 181  -- How often do you go in person to your main workplace currently = Not at all
           ) 
         then 1
         else 0
       end caregiver,
       case when WS_WKPL_SCL_DIS_MEAS_ID = 265 then 1 else 0 end -- Yes
         + case when WS_WKPL_CLEANING_ID = 268 then 1 else 0 end -- Yes
         + case when WS_WKPL_PPE_USAGE_ID = 281 then 1 else 0 end -- Yes
         work_cleaning,
        case 
          when instr(':' || OCC_JOBS_IDS || ':', ':135:') > 0 -- Sales or Customer Service
            or instr(':' || OCC_JOBS_IDS || ':', ':137:') > 0 -- Healthcare Worker
            or instr(':' || OCC_JOBS_IDS || ':', ':138:') > 0 -- Healthcare Support Occupation
            or instr(':' || OCC_JOBS_IDS || ':', ':139:') > 0 -- Dental or Orthodontic
            or instr(':' || OCC_JOBS_IDS || ':', ':140:') > 0 -- Personal Care and Personal Services
            or instr(':' || OCC_JOBS_IDS || ':', ':161:') > 0 -- Community and Social Services
            or instr(':' || OCC_JOBS_IDS || ':', ':162:') > 0 -- Protective Services and First Responders
            or instr(':' || OCC_JOBS_IDS || ':', ':163:') > 0 -- Food Preparation and Service Related
            or instr(':' || OCC_JOBS_IDS || ':', ':164:') > 0 -- Factory for Food Processing and Production
            or instr(':' || OCC_JOBS_IDS || ':', ':166:') > 0 -- Manufacturing and Production
            or instr(':' || OCC_JOBS_IDS || ':', ':168:') > 0 -- Grounds Cleaning and Maintenance
            or instr(':' || OCC_JOBS_IDS || ':', ':171:') > 0 -- Warehouse or Fulfillment Center
            or instr(':' || OCC_JOBS_IDS || ':', ':173:') > 0 -- Delivery Services
            or instr(':' || OCC_JOBS_IDS || ':', ':178:') > 0 -- Child Care Facility
            or instr(':' || OCC_JOBS_IDS || ':', ':46:') > 0 -- Public Transportation (was 701)
            or instr(':' || OCC_JOBS_IDS || ':', ':621:') > 0 -- Travel and Tourism
            or instr(':' || OCC_JOBS_IDS || ':', ':622:') > 0 -- Mortuary or Medical Examiner
          then 1
          else 0
        end high_risk_prof,
        case
          when CI_GATHERINGS_LOCATION_ID = 348 -- Outdoor
          then 1
          when CI_GATHERINGS_LOCATION_ID = 347 -- Indoor
          then 3
          else 4 -- Both
        end event_location_score,
        case 
          when WS_WORK_INTERACTIONS_DY_ID = 584 -- b/t 1-10 ppl day
          then 5
          when WS_WORK_INTERACTIONS_DY_ID = 585 -- b/t 11-30 ppl day
          then 20
          when WS_WORK_INTERACTIONS_DY_ID = 586 -- b/t 31-50 ppl day
          then 40
          when WS_WORK_INTERACTIONS_DY_ID = 587 -- 51 or over ppl day
          then 60
          else 0 -- "no one"
        end interactions,
        case
          when instr(':' || WS_WORK_TRANSPORTATION_IDS  || ':', ':287:') > 0  -- Bus
            or instr(':' || WS_WORK_TRANSPORTATION_IDS  || ':', ':288:') > 0  -- Train / subway
            or instr(':' || WS_WORK_TRANSPORTATION_IDS  || ':', ':290:') > 0  -- Frequent air travel
          then 1
          else 0 
        end uses_transit,
        case 
          when instr(':' || CSS_PRE_EXISTING_COND_IDS || ':', ':549:') > 0 -- Asthma
            or instr(':' || CSS_PRE_EXISTING_COND_IDS || ':', ':550:') > 0 -- COPD
            or instr(':' || CSS_PRE_EXISTING_COND_IDS || ':', ':551:') > 0 -- Pulmonary fibrosis
            or instr(':' || CSS_PRE_EXISTING_COND_IDS || ':', ':552:') > 0 -- Cystic fibrosis
            or instr(':' || CSS_PRE_EXISTING_COND_IDS || ':', ':561:') > 0 -- Cancer - undergoing treatment
            or instr(':' || CSS_PRE_EXISTING_COND_IDS || ':', ':562:') > 0 -- Diabetes (type 1)
            or instr(':' || CSS_PRE_EXISTING_COND_IDS || ':', ':563:') > 0 -- Diabetes (type 2)
            or instr(':' || CSS_PRE_EXISTING_COND_IDS || ':', ':2:') > 0 -- Immunocompromising or immunosuppressive condition
            or instr(':' || CSS_PRE_EXISTING_COND_IDS || ':', ':1:') > 0 -- Hospitalized in the last 6 months
          then 1
          else 0
        end comorbid_score,
        case 
          when CI_GATHERINGS_LAST_2W_ID = 341 -- Yes
          then 1
          else 0
        end gatherings_last_2w_score,
        case 
          when CI_HOME_VISITOR_FREQ_ID = 361 -- Daily
          then 1
          else 0
        end home_visitor_freq_score
    from survey_responses_pivot_mv srp
    where sr_status in ('COMPLETED', 'ENROLLED')
  ) srp
) srp
```

